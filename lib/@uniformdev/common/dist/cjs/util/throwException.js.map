{"version":3,"file":"throwException.js","sourceRoot":"","sources":["../../../src/util/throwException.ts"],"names":[],"mappings":";;;AAAA,SAAgB,cAAc,CAAC,OAAuB;IAClD,gCAAgC;IAChC,qEAAqE;IACrE,qDAAqD;IACrD,2EAA2E;IAC3E,kDAAkD;IAClD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,EAAE;QAC9C,MAAM,OAAO,CAAC;KACjB;IACD,MAAM,IAAI,KAAK,CAAS,OAAO,IAAI,4DAA4D,CAAC,CAAC;AACrG,CAAC;AAVD,wCAUC","sourcesContent":["export function throwException(message: string | Error): any {\r\n    // typeof Error returns `object`\r\n    // And for some reason `message instanceof Error` sometimes evaluates\r\n    // to false when message is actually an Error object.\r\n    // So, go with the highly scientific option and check for `object` type and\r\n    // whether or not the `stack` property is defined.\r\n    if (typeof message === 'object' && message.stack) {\r\n        throw message;\r\n    }\r\n    throw new Error(<string>message || 'Unknown error occurred, check stacktrace to get more info.');\r\n}\r\n"]}