{"version":3,"file":"scriptLoader.js","sourceRoot":"","sources":["../../../src/utils/scriptLoader.ts"],"names":[],"mappings":"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","sourcesContent":["import { getNullLogger, Logger } from '@uniformdev/common';\r\n\r\nexport interface ClientScript {\r\n    id: string;\r\n    url: string;\r\n    notAsync?: boolean;\r\n}\r\n\r\nexport interface ClientScripts {\r\n    [scriptId: string]: string;\r\n}\r\n\r\nexport interface LoadClientScriptsArgs {\r\n    callback?: () => void;\r\n    cachedScripts?: ClientScripts;\r\n    logger?: Logger;\r\n}\r\n\r\nexport interface ClientScriptLoader {\r\n    load: (scripts: ClientScripts, args: LoadClientScriptsArgs) => Promise<boolean>;\r\n    type: string;\r\n}\r\n\r\nexport function getClientScriptLoader(): ClientScriptLoader {\r\n    return {\r\n        type: 'default',\r\n        load: loadClientScripts,\r\n    };\r\n}\r\n\r\nasync function loadClientScripts(scripts: ClientScripts, args: LoadClientScriptsArgs): Promise<boolean> {\r\n    const { cachedScripts = {}, callback, logger = getNullLogger() } = args;\r\n    //\r\n    //Return if no urls were specified.\r\n    const ids = Object.keys(scripts);\r\n    if (ids.length == 0) {\r\n        return true;\r\n    }\r\n    //\r\n    //Return if all urls are already cached.\r\n    const idsNotCached: string[] = [];\r\n    ids.forEach((id) => {\r\n        const cachedUrl = cachedScripts[id];\r\n        if (cachedUrl != scripts[id]) {\r\n            idsNotCached.push(id);\r\n        }\r\n    });\r\n    if (idsNotCached.length == 0) {\r\n        return true;\r\n    }\r\n    //\r\n    //\r\n    const promises: Promise<ClientScript>[] = [];\r\n    idsNotCached.forEach((id) => {\r\n        const url = scripts[id];\r\n        promises.push(load.js({ id, url }));\r\n    });\r\n    try {\r\n        const loadedScripts = await Promise.all(promises);\r\n        loadedScripts.forEach((script) => {\r\n            cachedScripts[script.id] = script.url;\r\n        });\r\n        if (callback) {\r\n            logger.debug('Client script loader - Scripts were loaded so invoking callback.', { scripts });\r\n            callback();\r\n        }\r\n        logger.debug('Client script loader - Finished loading scripts.', { scripts: loadedScripts });\r\n        return true;\r\n    } catch (err) {\r\n        logger.error('Client script loader - Error while loading scripts.', { scripts });\r\n        return false;\r\n    }\r\n}\r\n\r\nconst load = (function () {\r\n    return {\r\n        css: _load('link'),\r\n        js: _load('script'),\r\n        img: _load('img'),\r\n    };\r\n})();\r\n\r\nfunction _load(tag: string) {\r\n    return function (script: ClientScript) {\r\n        return new Promise<ClientScript>(function (resolve, reject) {\r\n            var element = document.createElement(tag);\r\n            var parent = document.body;\r\n            var attr = 'src';\r\n            element.onload = function () {\r\n                resolve(script);\r\n            };\r\n            element.onerror = function () {\r\n                element.remove();\r\n                reject(script);\r\n            };\r\n            switch (tag) {\r\n                case 'script':\r\n                    (element as HTMLScriptElement).async = script.notAsync == true ? false : true;\r\n                    parent = document.head;\r\n                    break;\r\n                case 'link':\r\n                    (element as HTMLLinkElement).type = 'text/css';\r\n                    (element as HTMLLinkElement).rel = 'stylesheet';\r\n                    attr = 'href';\r\n                    parent = document.head;\r\n            }\r\n            const attr2 = document.createAttribute(attr);\r\n            attr2.value = script.url;\r\n            element.attributes.setNamedItem(attr2);\r\n            parent.appendChild(element);\r\n        });\r\n    };\r\n}\r\n"]}