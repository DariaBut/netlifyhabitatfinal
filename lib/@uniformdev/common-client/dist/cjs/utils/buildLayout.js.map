{"version":3,"file":"buildLayout.js","sourceRoot":"","sources":["../../../src/utils/buildLayout.ts"],"names":[],"mappings":"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","sourcesContent":["import { tryParseGuid } from '@uniformdev/common';\r\nimport { DataItem } from '..';\r\nimport { PageComponentProps } from '.';\r\nimport { noopLogger } from '.';\r\nimport { RenderingNode, RenderingType } from '..';\r\n\r\nexport function buildLayout<T>(props: PageComponentProps<T>, initial: boolean = false) {\r\n    const { item: page, home, datasources, html, uniformContext } = props;\r\n\r\n    if (!page) throw new Error('no page');\r\n    if (!datasources) throw new Error('no datasources');\r\n    if (!html) throw new Error('no html');\r\n    // if (!components) throw new Error('no components');\r\n    // it's okay because of magic button if (Object.getOwnPropertyNames(components).length <= 0) throw new Error('components are empty');\r\n\r\n    const logger = !uniformContext || !uniformContext.logger ? noopLogger : uniformContext.logger;\r\n\r\n    logger.debug('Rendering dynamic layout of ' + page.id);\r\n\r\n    const placeholders: any = {};\r\n    const renderings = page.renderings;\r\n    if (!renderings) throw new Error('no renderings');\r\n\r\n    for (let i = 0; i < renderings.length; ++i) {\r\n        const r = renderings[i];\r\n        if (!r || !r.id) {\r\n            logger.error(\r\n                'Rendering #' + i + ' has no id: ',\r\n                JSON.stringify(r ? r.id : 'undefined rendering')\r\n            );\r\n\r\n            continue;\r\n        }\r\n\r\n        let placeholder = (r.placeholder || '').trim().toLowerCase() || 'main';\r\n        const rawDatasource = r.settings.DataSource ? r.settings.DataSource.toLowerCase() : '';\r\n        const datasource = tryParseGuid(rawDatasource);\r\n\r\n        const tagName = r.componentName;\r\n        const dataSourceItem: DataItem = (datasource && datasources[datasource]) || undefined;\r\n\r\n        if (datasource && !dataSourceItem && r.renderingType !== RenderingType.mvc) {\r\n            logger.warn(\r\n                `The '${\r\n                    tagName || r.id\r\n                }' component's datasource '${datasource}' ('${rawDatasource}') cannot be resolved.`\r\n            );\r\n\r\n            continue;\r\n        }\r\n\r\n        const item = dataSourceItem || page;\r\n        const parseRenderingParameters = (parameters: string) => {\r\n            if(!parameters){\r\n                return undefined;\r\n            }\r\n            // @ts-ignore\r\n            return getEntries(new URLSearchParams(parameters));\r\n        }\r\n        const rendering: RenderingNode = {\r\n            id: tryParseGuid(r.id),\r\n            renderingId: tryParseGuid(r.renderingId),\r\n            renderingType: r.renderingType,\r\n            componentName: tagName,\r\n            settings: r.settings,\r\n            datasource: datasource || '',\r\n            hidden: false,\r\n            renderingContext: {\r\n                item,\r\n                page,\r\n                home: home || page,\r\n                placeholders,\r\n                datasources,\r\n                html,\r\n                datasource: r.settings?.DataSource,\r\n                parameters: parseRenderingParameters(r.settings?.Parameters)\r\n            },\r\n        };\r\n\r\n        if (initial) {\r\n            if (r.settings.Rules) {\r\n                const rules = r.settings.Rules.Rules;\r\n                if (rules && rules.length > 0) {\r\n                    for (let i = 0; i < rules.length; ++i) {\r\n                        const rule = rules[i];\r\n                        if (rule.UniqueId === '00000000-0000-0000-0000-000000000000') {\r\n                            const actions = rule.Actions;\r\n                            if (actions && actions.length > 0) {\r\n                                for (var j = 0; j < actions.length; ++j) {\r\n                                    const action = actions[j];\r\n                                    if (\r\n                                        action.type ===\r\n                                        'Sitecore.Rules.ConditionalRenderings.HideRenderingAction'\r\n                                    ) {\r\n                                        rendering.hidden = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!placeholders.hasOwnProperty(placeholder)) {\r\n            placeholders[placeholder] = [];\r\n        }\r\n\r\n        placeholders[placeholder].push(rendering);\r\n        logger.debug('Registering ' + rendering.renderingId + ' to ' + placeholder);\r\n    }\r\n\r\n    return placeholders;\r\n}\r\n\r\nconst getEntries = function (params: URLSearchParams) {\r\n    const obj = {};\r\n    // @ts-ignore\r\n    for (const key of params.keys()) {\r\n        if (params.getAll(key).length > 1) {\r\n            // @ts-ignore\r\n            obj[key] = params.getAll(key);\r\n        } else {\r\n            // @ts-ignore\r\n            obj[key] = params.get(key);\r\n        }\r\n    }\r\n    return obj;\r\n};\r\n"]}