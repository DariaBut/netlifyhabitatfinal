{"version":3,"file":"popVisibleRenderingsFromPlaceholdersMap.js","sourceRoot":"","sources":["../../../src/utils/popVisibleRenderingsFromPlaceholdersMap.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAU,MAAM,oBAAoB,CAAC;AAGlD,MAAM,UAAU,uCAAuC,CACnD,YAAiB,EACjB,cAAsB,EACtB,MAAc;IAEd,IAAM,iBAAiB,GAAoB,EAAE,CAAC;IAC9C,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAC,CAAS;QACjC,IACI,KAAK;YACL,2DAA2D;YAC3D,cAAc;YACd,iDAAiD;YACjD,EAAE;YACF,CAAC,IAAI,cAAc;YACnB,2DAA2D;YAC3D,oBAAoB;YACpB,2CAA2C;YAC3C,wDAAwD;YACxD,EAAE;YACF,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACxD,2DAA2D;YAC3D,KAAK,EACP;YACE,IAAM,YAAU,GAAkC,YAAY,CAAC,CAAC,CAAC,CAAC;YAClE,YAAU,CAAC,OAAO,CAAC,UAAC,CAA4B,EAAE,KAAa;gBAC3D,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM;oBAAE,OAAO;gBAC3B,MAAM,CAAC,KAAK,CACR,SAAS;oBACL,CAAC,CAAC,aAAa;oBACf,IAAI;oBACJ,CAAC,CAAC,EAAE;oBACJ,OAAO;oBACP,cAAc;oBACd,8CAA8C,CACrD,CAAC;gBACF,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,YAAU,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;YAClC,CAAC,CAAC,CAAC;SACN;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,iBAAiB,CAAC;AAC7B,CAAC","sourcesContent":["import { keys, Logger } from '@uniformdev/common';\r\nimport { RenderingNode } from '../model';\r\n\r\nexport function popVisibleRenderingsFromPlaceholdersMap(\r\n    placeholders: any,\r\n    placeholderKey: string,\r\n    logger: Logger\r\n): RenderingNode[] {\r\n    const visibleRenderings: RenderingNode[] = [];\r\n    keys(placeholders).forEach((x: string) => {\r\n        if (\r\n            false ||\r\n            // --------------------------------------------------------\r\n            // Exact match\r\n            //   e.g. '/main/content' matches '/main/content'\r\n            //\r\n            x == placeholderKey ||\r\n            // --------------------------------------------------------\r\n            // Loose placeholder\r\n            //   e.g. 'content' matches '/main/content'\r\n            //   but not '/main-content' and not '/main/content/top'\r\n            //\r\n            (!x.startsWith('/') && placeholderKey.endsWith('/' + x)) ||\r\n            // --------------------------------------------------------\r\n            false\r\n        ) {\r\n            const renderings: (RenderingNode | undefined)[] = placeholders[x];\r\n            renderings.forEach((r: RenderingNode | undefined, index: number) => {\r\n                if (!r || r.hidden) return;\r\n                logger.debug(\r\n                    'Adding ' +\r\n                        r.componentName +\r\n                        ' [' +\r\n                        r.id +\r\n                        '] to ' +\r\n                        placeholderKey +\r\n                        ' (and removing from list of free renderings)'\r\n                );\r\n                visibleRenderings.push(r);\r\n                renderings[index] = undefined;\r\n            });\r\n        }\r\n    });\r\n\r\n    return visibleRenderings;\r\n}\r\n"]}