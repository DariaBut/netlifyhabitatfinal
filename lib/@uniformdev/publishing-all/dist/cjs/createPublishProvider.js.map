{"version":3,"file":"createPublishProvider.js","sourceRoot":"","sources":["../../src/createPublishProvider.ts"],"names":[],"mappings":";;;AAAA,6CAA4C;AAE5C,uFAA+E;AAC/E,2DAAwG;AAExG,SAAgB,qBAAqB,CAAC,OAA+B;IACzD,IAAA,MAAM,GAAK,OAAO,OAAZ,CAAa;IAC3B,IAAM,QAAQ,GAAG,eAAM,CAAC,MAAM,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC;IAE9D,QAAQ,QAAQ,CAAC,WAAW,EAAE,EAAE;QAC5B,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACP,OAAO,IAAI,mCAAmB,CAAC,OAAO,CAAC,CAAC;QAC5C,KAAK,QAAQ;YACT,OAAO,IAAI,qCAAqB,CAAC,OAAO,CAAC,CAAC;QAC9C,KAAK,WAAW;YACZ,OAAO,IAAI,kDAAoB,CAAC,OAAO,CAAC,CAAC;KAChD;IAED,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,QAAQ,CAAC,CAAC;AACtE,CAAC;AAfD,sDAeC","sourcesContent":["import { getEnv } from '@uniformdev/common';\r\nimport { PublishProviderOptions } from '@uniformdev/common-server';\r\nimport { AzurePublishProvider } from '@uniformdev/publishing-azureblobstorage';\r\nimport { PublishProvider, FakePublishProvider, CustomPublishProvider } from '@uniformdev/common-server';\r\n\r\nexport function createPublishProvider(options: PublishProviderOptions): PublishProvider {\r\n    const { config } = options;\r\n    const provider = getEnv(config.env, 'UNIFORM_PUBLISH_TARGET');\r\n\r\n    switch (provider.toLowerCase()) {\r\n        case 'none':\r\n        case 'fake':\r\n            return new FakePublishProvider(options);\r\n        case 'custom':\r\n            return new CustomPublishProvider(options);\r\n        case 'azureblob':\r\n            return new AzurePublishProvider(options);\r\n    }\r\n\r\n    throw new Error('Publish provider is not supported: ' + provider);\r\n}\r\n"]}