{"version":3,"file":"buildAndExport.js","sourceRoot":"","sources":["../../src/buildAndExport.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yBAAgC;AAChC,8CAAwB;AACxB,gEAA0C;AAG1C,6CAA4C;AAE5C,IAAM,IAAI,GAAG,cAAI,CAAC,SAAS,CAAC,uBAAa,CAAC,IAAI,CAAC,CAAC;AAEhD,SAAsB,cAAc,CAChC,SAAiB,EACjB,MAA2B,EAC3B,MAAc;;;;;;oBAGR,aAAa,GAAG,GAAG,CAAC;oBACpB,OAAO,GAAG,eAAM,CAAC,MAAM,CAAC,GAAG,EAAE,qCAAqC,EAAE,EAAE,CAAC,CAAC;oBACxE,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,gBAAc,OAAS,CAAC,CAAC,CAAC,EAAE,CAAC;oBACvD,GAAG,GAAG,eAAU,CAAC,mCAAmC,CAAC;wBACvD,CAAC,CAAC,8GAA8G;4BAC9G,aAAa;wBACf,CAAC,CAAC,sDAAsD,GAAG,aAAa,CAAC;oBAEzE,aAAa,GAAG,eAAM,CAAC,MAAM,CAAC,GAAG,EAAE,qCAAqC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;oBACzF,IAAI,CAAC,aAAa,EAAE;wBAChB,MAAM,CAAC,IAAI,CAAC,+EAA+E,GAAG,GAAG,CAAC,CAAC;wBACnG,aAAa,GAAG,GAAG,CAAC;qBACvB;yBAEG,KAAK,EAAL,wBAAK;;;oBAEL,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wBACpC,MAAM,IAAI,KAAK,CACX,gIAAgI,CACnI,CAAC;qBACL;oBAEK,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;oBACxD,MAAM,GAAG,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;oBACxD,MAAM,CAAC,KAAK,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC;oBAE1C,QAAQ,GAAG,MAAM,CAAC,oBAAoB,CAAC;oBAE3C,MAAM,CAAC,IAAI,CACP,0EAA0E,GAAG,QAAQ,GAAG,GAAG,CAC9F,CAAC;oBACF,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;oBAET,qBAAM,IAAI,CAAC,QAAQ,EAAE;4BAC1C,GAAG,wBACI,MAAM,CAAC,GAAG,KACb,cAAc,EAAE,SAAS,EACzB,kBAAkB,EAAE,SAAS,EAC7B,QAAQ,EAAE,YAAY,EACtB,uBAAuB,EAAE,GAAG,EAC5B,qBAAqB,EAAE,GAAG,EAC1B,eAAe,EAAE,MAAM,EACvB,oBAAoB,EAAE,QAAQ,GACjC;4BACD,GAAG,EAAE,aAAa;4BAClB,SAAS,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;yBAC9B,CAAC,EAAA;;oBAbE,KAAqB,SAavB,EAbI,MAAM,YAAA,EAAE,MAAM,YAAA;oBAed,OAAO,GACT,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC;wBACpC,CAAC,CAAC,SAAS;wBACX,CAAC,CAAC,gBAAgB,GAAG,MAAM,GAAG,YAAY,GAAG,MAAM,CAAC;oBAE5D,IAAI,OAAO,KAAK,SAAS,EAAE;wBACvB,MAAM,IAAI,KAAK,CACX,iCAAiC,GAAG,OAAO,GAAG,YAAY,GAAG,MAAM,GAAG,YAAY,GAAG,MAAM,CAC9F,CAAC;qBACL;;;oBAGL,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;;;;;CAC3C;AAnED,wCAmEC","sourcesContent":["import { existsSync } from 'fs';\r\nimport util from 'util';\r\nimport child_process from 'child_process';\r\nimport { Logger } from '@uniformdev/common';\r\nimport { UniformServerConfig } from '@uniformdev/common-server';\r\nimport { getEnv } from '@uniformdev/common';\r\n\r\nconst exec = util.promisify(child_process.exec);\r\n\r\nexport async function buildAndExport(\r\n    outputDir: string,\r\n    config: UniformServerConfig,\r\n    logger: Logger\r\n): Promise<void> {\r\n    // SETTINGS\r\n    const clientRepoDir = '.';\r\n    const threads = getEnv(config.env, 'UNIFORM_PUBLISH_NEXT_EXPORT_THREADS', '');\r\n    const threadsSwitch = threads ? ` --threads ${threads}` : '';\r\n    const def = existsSync('./node_modules/next/dist/bin/next')\r\n        ? 'node node_modules/next/dist/bin/next build && node node_modules/next/dist/bin/next export --outdir \"__DIR__\"' +\r\n          threadsSwitch\r\n        : 'npx next build && npx next export --outdir \"__DIR__\"' + threadsSwitch;\r\n\r\n    let exportCommand = getEnv(config.env, 'UNIFORM_PUBLISH_NEXT_EXPORT_COMMAND', '').trim();\r\n    if (!exportCommand) {\r\n        logger.info('UNIFORM_PUBLISH_NEXT_EXPORT_COMMAND is not defined, so switching to default: ' + def);\r\n        exportCommand = def;\r\n    }\r\n\r\n    if (false) {\r\n    } else {\r\n        if (!exportCommand.includes('__DIR__')) {\r\n            throw new Error(\r\n                'The UNIFORM_PUBLISH_NEXT_EXPORT_COMMAND setting does not contain the __DIR__ token that will be replaced with dir to export to'\r\n            );\r\n        }\r\n\r\n        const command1 = exportCommand.replace(/__DIR__/g, outputDir);\r\n        const apiUrl = config.UNIFORM_CONTENT_URL.toLowerCase();\r\n        logger.debug('set UNIFORM_API_URL=' + apiUrl);\r\n\r\n        let sitename = config.UNIFORM_API_SITENAME;\r\n\r\n        logger.info(\r\n            'Starting custom exec nextjs export process (with UNIFORM_API_SITENAME = ' + sitename + ')'\r\n        );\r\n        logger.debug('Exec: ' + command1);\r\n\r\n        let { stdout, stderr } = await exec(command1, {\r\n            env: {\r\n                ...config.env,\r\n                EXPORT_OUT_DIR: outputDir,\r\n                UNIFORM_BUILD_MODE: 'publish',\r\n                NODE_ENV: 'production',\r\n                UNIFORM_OPTIONS_PREVIEW: '0',\r\n                UNIFORM_OPTIONS_DEBUG: '0',\r\n                UNIFORM_API_URL: apiUrl,\r\n                UNIFORM_API_SITENAME: sitename,\r\n            },\r\n            cwd: clientRepoDir,\r\n            maxBuffer: 20 * 1024 * 1024,\r\n        });\r\n\r\n        const message =\r\n            stdout.indexOf('Export successful') >= 0\r\n                ? 'success'\r\n                : 'fail, stdout: ' + stdout + ', stderr: ' + stderr;\r\n\r\n        if (message !== 'success') {\r\n            throw new Error(\r\n                'Exporting has failed. Message: ' + message + ', stdout: ' + stdout + ', stderr: ' + stderr\r\n            );\r\n        }\r\n    }\r\n\r\n    logger.info('Exporting has succeeded.');\r\n}\r\n"]}