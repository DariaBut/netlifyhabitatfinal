{"version":3,"file":"server.js","sourceRoot":"","sources":["../../src/server.ts"],"names":[],"mappings":"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","sourcesContent":["import next from 'next';\r\nimport Server from 'next/dist/next-server/server/next-server';\r\n\r\nimport {\r\n    createUniformServer,\r\n    startUniformServer,\r\n    parseUniformServerConfig,\r\n    UniformServerMode,\r\n    serverLogger,\r\n} from '@uniformdev/common-server';\r\n\r\nimport { ServerOptions, NextBuildAndExportEngine } from '.';\r\nimport { getEnv } from '@uniformdev/common';\r\n\r\nconst defaultExtensionFilter: Array<string> = [\r\n    'txt',\r\n    'css',\r\n    'js',\r\n    'gif',\r\n    'png',\r\n    'jpg',\r\n    'tiff',\r\n    'webp',\r\n    'jpeg',\r\n    'bmp',\r\n    'ico',\r\n    'woff',\r\n    'woff2',\r\n    'map',\r\n    'svg',\r\n    'eot',\r\n    'ttf',\r\n    'otf',\r\n];\r\nconst defaultPathFilter: Array<string> = ['/_next/', '/internal/process/next_tick.js'];\r\n\r\nexport function server(\r\n    {\r\n        logger = serverLogger,\r\n        createPublishProvider,\r\n        extensionFilter = defaultExtensionFilter,\r\n        pathFilter = defaultPathFilter,\r\n    }: ServerOptions = {\r\n        logger: serverLogger,\r\n        extensionFilter: defaultExtensionFilter,\r\n        pathFilter: defaultPathFilter,\r\n    }\r\n): void {\r\n    if (!logger) {\r\n        throw new Error('logger must be defined for `next-server`');\r\n    }\r\n\r\n    logger.info(`Using extension filter: ${extensionFilter.join(',')}`);\r\n    logger.info(`Using path filter: ${defaultPathFilter.join(',')}`);\r\n\r\n    process.env.UNIFORM_IS_AT_RUNTIME = '1';\r\n    const uniformServerConfig = parseUniformServerConfig(process.env, logger);\r\n\r\n    logger.info(`NODE_ENV: ${process.env.NODE_ENV}`);\r\n\r\n    const createAndStartUniformServer = async function (nextServer: Server | undefined) {\r\n        const buildAndExportEngine = new NextBuildAndExportEngine();\r\n        const server = await createUniformServer(buildAndExportEngine, logger, {\r\n            createPublishProvider,\r\n            uniformServerConfig,\r\n        });\r\n\r\n        if (nextServer) {\r\n            const handler = nextServer.getRequestHandler();\r\n\r\n            server.get('*', (req: any, res: any) => {\r\n                const path = decodeURI(req.path) || '/';\r\n\r\n                if (path.toLowerCase().endsWith('/layouts/system/visitoridentification.js')) {\r\n                    res.send('// uniform stub for Sitecore visitor identification script: ' + path);\r\n                    return;\r\n                }\r\n\r\n                const shouldExcludeByExtension =\r\n                    extensionFilter &&\r\n                    Array.isArray(extensionFilter) &&\r\n                    extensionFilter.includes(path.substr(path.lastIndexOf('.') + 1));\r\n\r\n                const shouldExcludeByPath =\r\n                    pathFilter && Array.isArray(pathFilter) && pathFilter.some((p) => path.startsWith(p));\r\n\r\n                if (shouldExcludeByExtension || shouldExcludeByPath) {\r\n                    logger.debug(`Ignoring path ${path} due to path or extension filter`);\r\n                    return handler(req, res);\r\n                }\r\n\r\n                if (!/\\/$|\\.\\w+$/g.exec(path)) {\r\n                    // redirect if /foo and not /foo.png\r\n                    res.redirect(302, req.path + '/');\r\n                    return;\r\n                }\r\n\r\n                logger.info('Incoming HTTP ' + req.method + ' ' + path);\r\n\r\n                try {\r\n                    return handler(req, res);\r\n                } catch (ex) {\r\n                    logger.error('Failed to handle request\\n' + JSON.stringify(ex));\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n\r\n        startUniformServer(server, uniformServerConfig, logger);\r\n    };\r\n\r\n    const mode = uniformServerConfig.UNIFORM_MODE;\r\n    logger.info('Uniform in ' + mode + ' mode.');\r\n\r\n    const api = uniformServerConfig.UNIFORM_API_URL;\r\n    logger.info(' API URL: ' + api);\r\n    const data = uniformServerConfig.UNIFORM_CONTENT_URL;\r\n    logger.info('Data URL: ' + data);\r\n\r\n    const exportCommand = getEnv(process.env, 'UNIFORM_PUBLISH_NEXT_EXPORT_COMMAND', '').trim();\r\n\r\n    if (exportCommand && !exportCommand.includes('__DIR__')) {\r\n        throw new Error(\r\n            'The UNIFORM_PUBLISH_NEXT_EXPORT_COMMAND setting does not contain the __DIR__ token that will be replaced with dir to export to'\r\n        );\r\n    }\r\n\r\n    if (mode === UniformServerMode.publish) {\r\n        createAndStartUniformServer(undefined);\r\n    } // preview or mixed\r\n    else {\r\n        logger.info('NextJS is being activated...');\r\n        const app = next({ dev: process.env.NODE_ENV !== 'production' });\r\n\r\n        app.prepare().then(async () => {\r\n            await createAndStartUniformServer(app);\r\n        });\r\n    }\r\n}\r\n"]}