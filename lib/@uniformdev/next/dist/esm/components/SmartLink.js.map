{"version":3,"file":"SmartLink.js","sourceRoot":"","sources":["../../../src/components/SmartLink.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,WAAW,CAAC;AAC7B,OAAO,IAAI,MAAM,WAAW,CAAC;AAE7B,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAEvF,OAAO,EAAE,UAAU,EAAE,MAAM,2BAA2B,CAAC;AAGvD,OAAO,EAAE,aAAa,EAAE,MAAM,IAAI,CAAC;AAEnC;IAA+B,6BAAoE;IAAnG;;IAiFA,CAAC;IAhFG,0BAAM,GAAN;QACI,IAAM,MAAM,GAAkB,kBAAkB,CAAC,aAAa,EAAE,CAAC,CAAC;QAClE,IAAM,QAAQ,GAAG,MAAM,CAAC,8BAA8B,CAAC;QACnD,IAAA,KAA+B,IAAI,CAAC,KAAK,EAAvC,IAAI,UAAA,EAAE,SAAS,eAAA,EAAE,OAAO,aAAe,CAAC;QAC9C,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAExB,IAAI,SAAS,EAAE;YACX,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;SACjC;QAED,IAAI,OAAO,CAAC,IAAI,EAAE;YACd,OAAO,OAAO,CAAC,IAAI,CAAC;SACvB;QAED,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAClB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC;SAC3B;QAED,IAAM,QAAQ,GAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,cAAc,CAAC,mBAAmB,CAAC,CAAC;QACjF,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,sCAAO,OAAO,GAAG,QAAQ,CAAK,CAAC;SACzC;QACD,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC/B,OAAO,CACH,oBAAC,IAAI,IAAC,IAAI,EAAE,IAAI;gBACZ,sCAAO,OAAO,GAAG,QAAQ,CAAK,CAC3B,CACV,CAAC;SACL;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAM,IAAI,GAAG,OAAO,CAAC,MAAI,KAAK,MAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QAE9C,IAAM,OAAO,GAAG,QAAQ,CAAC;QAEzB,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,CACH,oBAAC,IAAI,IAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE;gBACvB,sCAAO,OAAO,GAAG,QAAQ,CAAK,CAC3B,CACV,CAAC;SACL;QAED,IAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC9E,sDAAsD;QACtD,6DAA6D;QAC7D,gFAAgF;QAEhF,OAAO,CACH;YACI,oBAAC,IAAI,IAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE;gBACvB,sCAAO,OAAO,GAAG,QAAQ,CAAK,CAC3B;YACP,oBAAC,IAAI;gBACD,8BACI,GAAG,EAAC,SAAS,EACb,WAAW,EAAC,WAAW,EACvB,IAAI,EAAE,YAAY,EAClB,EAAE,EAAC,OAAO,EACV,GAAG,EAAE,YAAY,GACnB,CAeC,CACR,CACN,CAAC;IACN,CAAC;IACL,gBAAC;AAAD,CAAC,AAjFD,CAA+B,KAAK,CAAC,SAAS,GAiF7C","sourcesContent":["import React from 'react';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nimport { replace, throwException, trim, parseUniformConfig } from '@uniformdev/common';\r\n\r\nimport { getPageUrl } from '@uniformdev/common-client';\r\nimport { UniformConfig } from '@uniformdev/common';\r\n\r\nimport { getNextConfig } from '..';\r\n\r\nexport class SmartLink extends React.Component<{ href: string; className?: string; attribs?: any }> {\r\n    render() {\r\n        const config: UniformConfig = parseUniformConfig(getNextConfig());\r\n        const prefetch = config.UNIFORM_OPTIONS_PREFETCH_LINKS;\r\n        let { href, className, attribs } = this.props;\r\n        attribs = attribs || {};\r\n\r\n        if (className) {\r\n            attribs.className = className;\r\n        }\r\n\r\n        if (attribs.href) {\r\n            delete attribs.href;\r\n        }\r\n\r\n        if (attribs['class']) {\r\n            delete attribs['class'];\r\n        }\r\n\r\n        const children: any = this.props.children || throwException('no props.children');\r\n        if (!href) {\r\n            return <a {...attribs}>{children}</a>;\r\n        }\r\n        if (href && !href.startsWith('/')) {\r\n            return (\r\n                <Link href={href}>\r\n                    <a {...attribs}>{children}</a>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        const value = trim(href, '/');\r\n        const link = replace(`/${value}/`, '//', '/');\r\n\r\n        const newHref = '/index';\r\n\r\n        const as = link;\r\n        if (!prefetch) {\r\n            return (\r\n                <Link href={newHref} as={as}>\r\n                    <a {...attribs}>{children}</a>\r\n                </Link>\r\n            );\r\n        }\r\n\r\n        const prefetchPage = !prefetch ? undefined : getPageUrl(href, 'page', config);\r\n        // TODO: not possible to prefetch datasources this way\r\n        //const prefetchDatasources = getPageUrl(href, 'ds', config);\r\n        //const prefetchHtml = !prefetch ? undefined : getPageUrl(href, 'html', config);\r\n\r\n        return (\r\n            <>\r\n                <Link href={newHref} as={as}>\r\n                    <a {...attribs}>{children}</a>\r\n                </Link>\r\n                <Head>\r\n                    <link\r\n                        rel=\"preload\"\r\n                        crossOrigin=\"anonymous\"\r\n                        href={prefetchPage}\r\n                        as=\"fetch\"\r\n                        key={prefetchPage}\r\n                    />\r\n                    {/* <link\r\n                        rel=\"preload\"\r\n                        crossOrigin=\"anonymous\"\r\n                        href={prefetchDatasources}\r\n                        as=\"fetch\"\r\n                        key={prefetchDatasources}\r\n                    /> */}\r\n                    {/* <link\r\n                        rel=\"preload\"\r\n                        crossOrigin=\"anonymous\"\r\n                        href={prefetchHtml}\r\n                        as=\"fetch\"\r\n                        key={prefetchHtml}\r\n                    /> */}\r\n                </Head>\r\n            </>\r\n        );\r\n    }\r\n}\r\n"]}