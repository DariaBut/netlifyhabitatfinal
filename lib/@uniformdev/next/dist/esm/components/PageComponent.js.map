{"version":3,"file":"PageComponent.js","sourceRoot":"","sources":["../../../src/components/PageComponent.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAoB,MAAM,OAAO,CAAC;AAEzC,OAAO,EAAE,cAAc,EAAU,MAAM,oBAAoB,CAAC;AAE5D,OAAO,EAAE,WAAW,EAAsB,MAAM,2BAA2B,CAAC;AAI5E,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AAErE;IAAiC,sCAAqE;IAGlG,4BAAY,KAAoC;QAAhD,YACI,kBAAM,KAAK,CAAC,SAKf;QAHG,KAAI,CAAC,KAAK,GAAG,EAAE,YAAY,EAAE,WAAW,CAAY,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC;QAEnE,KAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,cAAc,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC;;IACpG,CAAC;IAED,0EAA0E;IAC1E,6GAA6G;IAC7G,oGAAoG;IAC9F,+CAAkB,GAAxB,UAAyB,SAAc;;;gBACnC,IAAI,SAAS,IAAI,SAAS,EAAE;oBACxB,sBAAO;iBACV;gBAED,IAAI,SAAS,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;oBACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC7B;;;;KACJ;IAEK,8CAAiB,GAAvB;;;gBACI,0CAA0C;gBAC1C,IAAI,CAAC,kBAAkB,EAAE,CAAC;;;;KAC7B;IAED,mDAAsB,GAAtB;QACY,IAAA,KAAK,GAAK,IAAI,MAAT,CAAU;QACvB,IAAM,YAAY,GAAG,WAAW,CAAY,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;QAElE,OAAO;YACH,YAAY,EAAE,YAAY,IAAI,cAAc,CAAC,iBAAiB,CAAC;YAC/D,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,cAAc,CAAC,SAAS,CAAC;YAC7C,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,cAAc,CAAC,SAAS,CAAC;YAC7C,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,cAAc,CAAC,SAAS,CAAC;YAC3D,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,cAAc,CAAC,gBAAgB,CAAC;YAClE,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,cAAc,CAAC,SAAS,CAAC;SAChD,CAAC;IACN,CAAC;IAED,mCAAM,GAAN;QACI,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,UAAU,EAAE;YAC3C,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;SAC7F;QAED,IAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QACvD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IACjD,CAAC;IAED,+CAAkB,GAAlB;QACI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;QAEpD,QAAQ,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC1D,CAAC;IACL,yBAAC;AAAD,CAAC,AA1DD,CAAiC,KAAK,CAAC,SAAS,GA0D/C;AAED,MAAM,CAAC,IAAM,aAAa,GAAG,kBAAkB,CAAgC,kBAAkB,CAAC,CAAC","sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\nimport { throwException, Logger } from '@uniformdev/common';\r\n\r\nimport { buildLayout, PageComponentProps } from '@uniformdev/common-client';\r\n\r\nimport { RenderingContext } from '@uniformdev/common-client';\r\n\r\nimport { withUniformContext } from '../enhancers/withUniformContext';\r\n\r\nclass PageComponentClass extends React.Component<PageComponentProps<ReactNode>, { placeholders: any }> {\r\n    private readonly logger: Logger;\r\n\r\n    constructor(props: PageComponentProps<ReactNode>) {\r\n        super(props);\r\n\r\n        this.state = { placeholders: buildLayout<ReactNode>(props, true) };\r\n\r\n        this.logger = (props.uniformContext && props.uniformContext.logger) || throwException('logger');\r\n    }\r\n\r\n    //workaround for spa enabled where it should raise uniform.pageload event.\r\n    //componentDidUpdate triggered twice. first time when page changed and second time when placeholder set state\r\n    //we have to trigger raise event once, that why check when previous path and current path are equal.\r\n    async componentDidUpdate(prevProps: any) {\r\n        if (prevProps == undefined) {\r\n            return;\r\n        }\r\n\r\n        if (prevProps.path === this.props.path) {\r\n            this.raisePageLoadEvent();\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //TODO: should be updated with new tracker\r\n        this.raisePageLoadEvent();\r\n    }\r\n\r\n    createRenderingContext(): RenderingContext {\r\n        const { props } = this;\r\n        const placeholders = buildLayout<ReactNode>(this.props, true);\r\n        this.logger.debug('Render page: ' + props.path, { placeholders });\r\n\r\n        return {\r\n            placeholders: placeholders || throwException('no placeholders'),\r\n            item: props.item || throwException('no item'),\r\n            page: props.page || throwException('no page'),\r\n            home: props.home || props.item || throwException('no home'), // [optimization(homepage-no-home-request)]\r\n            datasources: props.datasources || throwException('no datasources'),\r\n            html: props.html || throwException('no html'),\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (typeof this.props.children !== 'function') {\r\n            throw new Error('`children` prop of `PageComponent` is required and must be a function.');\r\n        }\r\n\r\n        const renderingContext = this.createRenderingContext();\r\n        return this.props.children(renderingContext);\r\n    }\r\n\r\n    raisePageLoadEvent() {\r\n        this.logger.debug(\"raise 'uniform.pageload' event\");\r\n\r\n        document.dispatchEvent(new Event('uniform.pageload'));\r\n    }\r\n}\r\n\r\nexport const PageComponent = withUniformContext<PageComponentProps<ReactNode>>(PageComponentClass);\r\n"]}