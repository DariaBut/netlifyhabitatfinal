{"version":3,"file":"buildPlaceholder.js","sourceRoot":"","sources":["../../../../src/processHtml/elements/buildPlaceholder.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAA0B;AAC1B,6CAAwG;AAIxG,SAAgB,sBAAsB;IAClC,OAAO;QACH,iBAAiB,EAAE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,aAAa,EAA3B,CAA2B;QACxD,WAAW,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI;KAC1B,CAAC;AACN,CAAC;AALD,wDAKC;AAED,SAAgB,gBAAgB,CAC5B,oBAAyB,EACzB,CAAM,EACN,cAAsB,EACtB,cAAsB,EACtB,gBAAkC,EAClC,MAAc;IAEd,OAAO;QACH,iGAAiG;QACjG,eAAe,EAAE,KAAK;QAEtB,iBAAiB,EAAE,UAAU,IAAI;YAC7B,OAAO,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;YACvF,sCAAsC;QAC1C,CAAC;QAED,WAAW,EAAE,UAAU,IAAI,EAAE,SAAS,EAAE,KAAK;YACzC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACP,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;aAC9B;YAEG,IAAA,KAAA,OAAiB,oCAAoC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAA,EAAlE,UAAU,QAAwD,CAAC;YAC1E,IAAI,iBAAiB,GACjB,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,IAAI;gBAChB,uBAAc,CAAC,4CAA4C,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAEhG,IAAI,iBAAiB,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;gBACrD,IAAM,UAAU,GAAG,sBAAa,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC1D,iBAAiB,GAAG,gBAAO,CAAC,iBAAiB,EAAE,uBAAuB,EAAE,UAAU,CAAC,CAAC;aACvF;YAED,iBAAiB,GAAG,gBAAO,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,kBAAS,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;YAE3F,MAAM,CAAC,KAAK,CAAC,4CAA4C,GAAG,iBAAiB,CAAC,CAAC;YAE/E,IAAM,gBAAgB,GAAG;gBACrB,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,cAAc,GAAG,iBAAiB;gBAC9C,KAAK,EAAE,KAAK;gBACZ,cAAc,EAAE,iBAAiB;gBACjC,gBAAgB,eAAO,gBAAgB,CAAE;aAC5C,CAAC;YAEF,OAAO,eAAK,CAAC,aAAa,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;QACvE,CAAC;KACJ,CAAC;AACN,CAAC;AA9CD,4CA8CC","sourcesContent":["import React from 'react';\r\nimport { throwException, trimStart, trimEnd, replace, tryFormatGuid, Logger } from '@uniformdev/common';\r\nimport { HtmlProcessingInstruction } from '../HtmlProcessingInstruction';\r\nimport { RenderingContext } from '@uniformdev/common-client';\r\n\r\nexport function buildRemovePlaceholder(): HtmlProcessingInstruction {\r\n    return {\r\n        shouldProcessNode: (node) => node.name === 'placeholder',\r\n        processNode: () => null,\r\n    };\r\n}\r\n\r\nexport function buildPlaceholder(\r\n    placeholderComponent: any,\r\n    r: any,\r\n    renderingIndex: number,\r\n    placeholderKey: string,\r\n    renderingContext: RenderingContext,\r\n    logger: Logger\r\n): HtmlProcessingInstruction {\r\n    return {\r\n        // this is important to keep to `false` otherwise script tags will be wrapped in placeholder tags\r\n        replaceChildren: false,\r\n\r\n        shouldProcessNode: function (node) {\r\n            return node.type === 'comment' && /uniform_frontend_placeholder/.test(node.data || '');\r\n            // return node.name === 'placeholder';\r\n        },\r\n\r\n        processNode: function (node, _children, index) {\r\n            if (!r.id) {\r\n                throw new Error('no r.id');\r\n            }\r\n\r\n            let [, matchedKey] = /uniform_frontend_placeholder:(\\S*)/.exec(node.data);\r\n            let newPlaceholderKey =\r\n                matchedKey?.trim() ||\r\n                throwException('No attribs.data-placeholder-key, attribs: ' + JSON.stringify(node.attribs));\r\n\r\n            if (newPlaceholderKey.includes('$(Rendering.UniqueId)')) {\r\n                const scIdformat = tryFormatGuid(r.id, 'B').toUpperCase();\r\n                newPlaceholderKey = replace(newPlaceholderKey, '$(Rendering.UniqueId)', scIdformat);\r\n            }\r\n\r\n            newPlaceholderKey = trimEnd(placeholderKey, '/') + '/' + trimStart(newPlaceholderKey, '/');\r\n\r\n            logger.debug('Constructing nested placeholder with key: ' + newPlaceholderKey);\r\n\r\n            const placeholderProps = {\r\n                key: r.id + renderingIndex + newPlaceholderKey,\r\n                index: index,\r\n                placeholderKey: newPlaceholderKey,\r\n                renderingContext: { ...renderingContext },\r\n            };\r\n\r\n            return React.createElement(placeholderComponent, placeholderProps);\r\n        },\r\n    };\r\n}\r\n"]}