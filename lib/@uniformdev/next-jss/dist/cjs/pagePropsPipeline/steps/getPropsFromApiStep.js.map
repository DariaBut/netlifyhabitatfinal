{"version":3,"file":"getPropsFromApiStep.js","sourceRoot":"","sources":["../../../../src/pagePropsPipeline/steps/getPropsFromApiStep.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uEAAsE;AACtE,uEAAiE;AAEpD,QAAA,mBAAmB,GAA0B;IACtD,IAAI,EAAE,KAAK;IACX,GAAG,EAAE,UAAO,OAAO;;;;;oBACP,KAAK,GAAuB,OAAO,MAA9B,EAAE,WAAW,GAAU,OAAO,YAAjB,EAAE,GAAG,GAAK,OAAO,IAAZ,CAAa;yBACxC,CAAC,KAAK,CAAC,UAAU,EAAjB,wBAAiB;oBACgB,qBAAM,OAAO,CAAC,GAAG,CAAC;4BAC/C,+CAAsB,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC,IAAI,EAAE;gCAChE,GAAG,KAAA;gCACH,mBAAmB,EAAE,EAAE;gCACvB,iBAAiB,EAAE,EAAE;6BACxB,CAAC;4BACF,0CAAiB,CAAC;gCACd,GAAG,KAAA;gCACH,QAAQ,EAAE,WAAW,CAAC,IAAI;6BAC7B,CAAC;yBACL,CAAC,EAAA;;oBAVI,KAAA,sBAA2B,SAU/B,KAAA,EAVK,UAAU,QAAA,EAAE,UAAU,QAAA;oBAY7B,KAAK,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC;oBACtC,KAAK,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC;oBAEtC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE;wBACrF,kGAAkG;wBAClG,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;qBAC1B;yBAAM;wBACH,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC;qBAC1B;oBAED,4CACO,OAAO,KACV,KAAK,OAAA,KACP;wBAEN,sBAAO,OAAO,EAAC;;;SAClB;CACJ,CAAC","sourcesContent":["import { PagePropsPipelineStep } from '../../interfaces';\r\nimport { fetchLayoutServiceData } from '../../fetchLayoutServiceData';\r\nimport { getDictionaryData } from '../../dictionaryDataPipeline';\r\n\r\nexport const getPropsFromApiStep: PagePropsPipelineStep = {\r\n    name: 'api',\r\n    run: async (context) => {\r\n        const { props, routeParams, env } = context;\r\n        if (!props.layoutData) {\r\n            const [layoutData, dictionary] = await Promise.all([\r\n                fetchLayoutServiceData(routeParams.sitecoreRoute, routeParams.lang, {\r\n                    env,\r\n                    layoutServiceConfig: {},\r\n                    queryStringParams: {},\r\n                }),\r\n                getDictionaryData({\r\n                    env,\r\n                    language: routeParams.lang,\r\n                }),\r\n            ]);\r\n\r\n            props.layoutData = layoutData || null;\r\n            props.dictionary = dictionary || null;\r\n\r\n            if (!props.layoutData || !props.layoutData.sitecore || !props.layoutData.sitecore.route) {\r\n                // If no route data was fetched, then pass a 404 statusCode as prop for any interested components.\r\n                props.statusCode = 404;\r\n            } else {\r\n                props.statusCode = 200;\r\n            }\r\n\r\n            return {\r\n                ...context,\r\n                props,\r\n            };\r\n        }\r\n        return context;\r\n    },\r\n};\r\n"]}