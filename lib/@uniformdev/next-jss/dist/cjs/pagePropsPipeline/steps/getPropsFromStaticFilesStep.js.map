{"version":3,"file":"getPropsFromStaticFilesStep.js","sourceRoot":"","sources":["../../../../src/pagePropsPipeline/steps/getPropsFromStaticFilesStep.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAA4D;AAE5D,+CAA+C;AAC/C,yCAAmD;AACnD,iDAAgD;AAEnC,QAAA,2BAA2B,GAA0B;IAC9D,IAAI,EAAE,cAAc;IACpB,GAAG,EAAE,UAAO,OAAO;;;YACP,KAAK,GAAK,OAAO,MAAZ,CAAa;YAC1B,IACI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;gBACrC,CAAC,sBAAe,EAAE;gBAClB,OAAO,CAAC,GAAG,CAAC,YAAY,KAAK,QAAQ,EACvC;gBACE,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;gBACtD,kGAAkG;gBAClG,sBAAO,gBAAgB,CAAC,OAAO,CAAC;yBAC3B,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,uBACT,OAAO,KACV,KAAK,wBACE,KAAK,GACL,IAAI,KAEb,EANc,CAMd,CAAC;yBACF,KAAK,CAAC,UAAC,GAAG;wBACP,IAAI,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;4BAC7C,OAAO,yCAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;yBAC3C;wBACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACnB,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;wBAClB,OAAO,OAAO,CAAC;oBACnB,CAAC,CAAC,EAAC;aACV;YACD,sBAAO,OAAO,EAAC;;SAClB;CACJ,CAAC;AAEF,SAAe,gBAAgB,CAAC,EAA8C;QAA5C,WAAW,iBAAA,EAAE,GAAG,SAAA;;;;YACxC,KAAK,GAAG,GAAG,CAAC,WAAW,IAAI,yBAAW,CAAC;YACzC,cAAc,GAAG,wBAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YAC5D,IAAI,cAAc,KAAK,GAAG,EAAE;gBACxB,cAAc,GAAG,OAAO,CAAC;aAC5B;YAEK,QAAQ,GAAG,UAAQ,cAAc,SAAI,WAAW,CAAC,IAAI,UAAO,CAAC;YAC7D,QAAQ,GAAQ,KAAK,CAAC,QAAQ,CAAC,CAAC;YACtC,gFAAgF;YAChF,gCAAgC;YAChC,sBAAO,QAAQ,CAAC,IAAI,EAAC;;;CACxB","sourcesContent":["import { getPropsFromApiStep } from './getPropsFromApiStep';\r\nimport { PagePropsPipelineContext, PagePropsPipelineStep } from '../../interfaces';\r\nimport { formatRoute } from '../../routeUtils';\r\nimport { isExportProcess } from '@uniformdev/next';\r\nimport { dataFetcher } from '../../dataFetcher';\r\n\r\nexport const getPropsFromStaticFilesStep: PagePropsPipelineStep = {\r\n    name: 'static-files',\r\n    run: async (context) => {\r\n        const { props } = context;\r\n        if (\r\n            process.env.NODE_ENV === 'production' &&\r\n            !isExportProcess() &&\r\n            process.env.RUNTIME_MODE === 'static'\r\n        ) {\r\n            console.log('************************** STATIC STEP');\r\n            // Attempt to fetch props data from disk, and fall back to api services if disk fetch returns 404.\r\n            return getPropsFromDisk(context)\r\n                .then((data) => ({\r\n                    ...context,\r\n                    props: {\r\n                        ...props,\r\n                        ...data,\r\n                    },\r\n                }))\r\n                .catch((err) => {\r\n                    if (err.response && err.response.status === 404) {\r\n                        return getPropsFromApiStep.run(context);\r\n                    }\r\n                    console.error(err);\r\n                    props.error = err;\r\n                    return context;\r\n                });\r\n        }\r\n        return context;\r\n    },\r\n};\r\n\r\nasync function getPropsFromDisk({ routeParams, env }: PagePropsPipelineContext) {\r\n    const fetch = env.dataFetcher || dataFetcher;\r\n    let formattedRoute = formatRoute(routeParams.sitecoreRoute);\r\n    if (formattedRoute === '/') {\r\n        formattedRoute = '/home';\r\n    }\r\n\r\n    const filePath = `/data${formattedRoute}/${routeParams.lang}.json`;\r\n    const response: any = fetch(filePath);\r\n    // note: `dataFetcher` returns the parsed response, but we're only interested in\r\n    // the `response.data` property.\r\n    return response.data;\r\n}\r\n"]}