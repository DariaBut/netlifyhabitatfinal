{"version":3,"file":"StaticAssetContext.js","sourceRoot":"","sources":["../../../src/components/StaticAssetContext.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,aAAa,EAAa,MAAM,OAAO,CAAC;AAExD,MAAM,CAAC,IAAM,kBAAkB,GAAG,aAAa,CAAC;IAC5C,WAAW,EAAE,EAAE;CAClB,CAAC,CAAC;AAEH,kEAAkE;AAClE,mEAAmE;AACnE,iFAAiF;AACjF,0EAA0E;AAC1E,yEAAyE;AACzE,sFAAsF;AACtF,IAAI,kBAAkB,GAAG,EAAE,CAAC;AAO5B,MAAM,CAAC,IAAM,0BAA0B,GAAG,UAAC,EAGT;QAF9B,mBAAgB,EAAhB,WAAW,mBAAG,EAAE,KAAA,EAChB,QAAQ,cAAA;IAER,IAAI,WAAW,EAAE;QACb,kBAAkB,GAAG,WAAW,CAAC;KACpC;IAED,OAAO,CACH,oBAAC,kBAAkB,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,WAAW,EAAE,kBAAkB,EAAE,IAClE,QAAQ,CACiB,CACjC,CAAC;AACN,CAAC,CAAC","sourcesContent":["import React, { createContext, ReactNode } from 'react';\r\n\r\nexport const StaticAssetContext = createContext({\r\n    assetPrefix: '',\r\n});\r\n\r\n// This will act as our \"store\" for the asset prefix. We generally\r\n// only receive an `assetPrefix` value from SSR hydration. However,\r\n// on client-side route change, the `getInitialProps` method is executed and will\r\n// pass an empty `assetPrefix` value into the app. We want to preserve the\r\n// `assetPrefix` value between client-side route changes, so we store the\r\n// initial value here and only change it if a _defined_ assetPrefix value is received.\r\nlet currentAssetPrefix = '';\r\n\r\ninterface StaticAssetContextProviderProps {\r\n    assetPrefix: string;\r\n    children: ReactNode;\r\n}\r\n\r\nexport const StaticAssetContextProvider = ({\r\n    assetPrefix = '',\r\n    children,\r\n}: StaticAssetContextProviderProps) => {\r\n    if (assetPrefix) {\r\n        currentAssetPrefix = assetPrefix;\r\n    }\r\n\r\n    return (\r\n        <StaticAssetContext.Provider value={{ assetPrefix: currentAssetPrefix }}>\r\n            {children}\r\n        </StaticAssetContext.Provider>\r\n    );\r\n};\r\n"]}