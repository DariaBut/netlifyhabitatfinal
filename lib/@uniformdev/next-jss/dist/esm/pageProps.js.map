{"version":3,"file":"pageProps.js","sourceRoot":"","sources":["../../src/pageProps.ts"],"names":[],"mappings":";;;;;;;;;;;AAiBA,0CAA0C;AAC1C,6DAA6D;AAC7D,MAAM,UAAU,UAAU,CAAC,KAAU,EAAE,YAA0B;IAC7D,IAAM,WAAW,yBACV,YAAY,GACZ,KAAK,CACX,CAAC;IAEF,sGAAsG;IACtG,IAAI,KAAK,CAAC,SAAS,EAAE;QACjB,WAAW,CAAC,SAAS,yBACd,YAAY,CAAC,SAAS,GACtB,KAAK,CAAC,SAAS,CACrB,CAAC;KACL;IACD,OAAO,WAAW,CAAC;AACvB,CAAC","sourcesContent":["export interface JssConfig {\r\n    sitecore: {\r\n        apiKey: string;\r\n        layoutServiceHost: string;\r\n    };\r\n    defaultLanguage: string;\r\n}\r\n\r\nexport interface DefaultProps {\r\n    layoutData: unknown;\r\n    statusCode: number;\r\n    dictionary: any;\r\n    language: string;\r\n    assetPrefix: string;\r\n    jssConfig: JssConfig;\r\n}\r\n\r\n// Merge any page props with it's defaults\r\n// This is a shallow merge for all props apart from jssConfig\r\nexport function mergeProps(props: any, defaultProps: DefaultProps) {\r\n    const mergedProps = {\r\n        ...defaultProps,\r\n        ...props,\r\n    };\r\n\r\n    // If props contains a jssConfig object, we want to merge it with defaultProps jssConfig, not replace.\r\n    if (props.jssConfig) {\r\n        mergedProps.jssConfig = {\r\n            ...defaultProps.jssConfig,\r\n            ...props.jssConfig,\r\n        };\r\n    }\r\n    return mergedProps;\r\n}\r\n"]}