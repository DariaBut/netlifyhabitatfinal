{"version":3,"file":"ensureDirectoryExists.js","sourceRoot":"","sources":["../../src/ensureDirectoryExists.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,IAAI,CAAC;AAEvC,MAAM,UAAU,qBAAqB,CAAC,OAAe;IACjD,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QAC/B,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;YACrB,OAAO,EAAE,CAAC;YACV,OAAO;SACV;QAED,sEAAsE;QACtE,qEAAqE;QACrE,kCAAkC;QAClC,MAAM;QACN,SAAS;QACT,4BAA4B;QAC5B,eAAe;QACf,KAAK,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,UAAC,GAAG;YACpC,IAAI,GAAG,EAAE;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;aACf;iBAAM;gBACH,OAAO,EAAE,CAAC;aACb;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC","sourcesContent":["import { mkdir, existsSync } from 'fs';\r\n\r\nexport function ensureDirectoryExists(dirPath: string) {\r\n    return new Promise((resolve, reject) => {\r\n        if (existsSync(dirPath)) {\r\n            resolve();\r\n            return;\r\n        }\r\n\r\n        // The `recursive` option ensures that nested paths are fully created.\r\n        // For example, `/out/data/boutiques-restaurants/agatha` would create\r\n        // the following folder structure:\r\n        // out\r\n        //   data\r\n        //     boutiques-restaurants\r\n        //       agatha\r\n        mkdir(dirPath, { recursive: true }, (err) => {\r\n            if (err) {\r\n                reject(err);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    });\r\n}\r\n"]}