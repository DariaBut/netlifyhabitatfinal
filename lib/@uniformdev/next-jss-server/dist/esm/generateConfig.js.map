{"version":3,"file":"generateConfig.js","sourceRoot":"","sources":["../../src/generateConfig.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\r\nimport { NextConfig } from 'next/dist/next-server/server/config';\r\nimport { config as withUniformNextServer } from '@uniformdev/next-server';\r\nconst packageConfig = require(`${process.cwd()}/package.json`);\r\n\r\nexport function withUniform(nextConfig: NextConfig) {\r\n    const config = withUniformNextServer(nextConfig as any) as NextConfig;\r\n    const uniformConfig = generateConfig();\r\n    config.serverRuntimeConfig = {\r\n        ...(config.serverRuntimeConfig || {}),\r\n        ...uniformConfig,\r\n    };\r\n    config.publicRuntimeConfig = {\r\n        ...config.publicRuntimeConfig,\r\n        sitecoreSiteName: uniformConfig.sitecoreSiteName,\r\n    };\r\n    config.env = {\r\n        ...(config.env || {}),\r\n        RUNTIME_MODE: process.env.RUNTIME_MODE || 'ssr',\r\n        JSS_MODE: process.env.JSS_MODE || 'connected',\r\n    };\r\n\r\n    return config;\r\n}\r\n\r\n/**\r\n * Generate config\r\n * The object returned from this function will be made available by importing src/temp/config.js.\r\n * This is executed prior to the build running, so it's a way to inject environment or build config-specific\r\n * settings as variables into the JSS app.\r\n * NOTE! Any configs returned here will be written into the client-side JS bundle. DO NOT PUT SECRETS HERE.\r\n * @param {object} configOverrides Keys in this object will override any equivalent global config keys.\r\n */\r\nfunction generateConfig(configOverrides: any = {}) {\r\n    const defaultConfig = {\r\n        sitecoreApiKey: 'no-api-key-set',\r\n        sitecoreApiHost: '',\r\n        jssAppName: 'Unknown',\r\n        defaultLanguage: 'en',\r\n        appLanguages: ['en'],\r\n    };\r\n\r\n    // require + combine config sources\r\n    const packageJson = transformPackageConfig();\r\n    const scjssConfig = transformScJssConfig();\r\n    const environmentConfig = transformEnvironmentConfig();\r\n\r\n    // optional:\r\n    // do any other dynamic config source (e.g. environment-specific config files)\r\n    // Object.assign merges the objects in order, so the\r\n    // package.json config can override the calculated config,\r\n    // scjssconfig.json overrides it,\r\n    // and finally config passed in the configOverrides param wins.\r\n    const config = mergeConfigs(defaultConfig, packageJson, scjssConfig, configOverrides, environmentConfig);\r\n\r\n    // The GraphQL endpoint is an example of making a _computed_ config setting\r\n    // based on other config settings.\r\n    addGraphQLConfig(config);\r\n\r\n    return config;\r\n}\r\n\r\nfunction transformScJssConfig() {\r\n    // scjssconfig.json may not exist if you've never run setup\r\n    // so if it doesn't we substitute a fake object\r\n    let config;\r\n    try {\r\n        // eslint-disable-next-line global-require\r\n        config = require(`${process.cwd()}/scjssconfig.json`);\r\n    } catch (e) {\r\n        return {};\r\n    }\r\n\r\n    if (!config) return {};\r\n\r\n    return {\r\n        sitecoreApiKey: config.sitecore.apiKey,\r\n        sitecoreApiHost: config.sitecore.layoutServiceHost,\r\n        sitecoreSiteName: config.sitecore.sitecoreSiteName,\r\n    };\r\n}\r\n\r\nfunction transformPackageConfig() {\r\n    if (!packageConfig.config) return {};\r\n\r\n    return {\r\n        jssAppName: packageConfig.config.appName,\r\n        // Typically, app name and site name will be the same, but sometimes they're not.\r\n        // And that causes all sorts of unpleasantness. So we allow for separate config values.\r\n        sitecoreSiteName: packageConfig.config.sitecoreSiteName || packageConfig.config.appName,\r\n        defaultLanguage: packageConfig.config.language || 'en',\r\n        graphQLEndpointPath: packageConfig.config.graphQLEndpointPath || null,\r\n        appLanguages: packageConfig.config.appLanguages || ['en'],\r\n    };\r\n}\r\n\r\nfunction transformEnvironmentConfig() {\r\n    return {\r\n        sitecoreApiHost: process.env.UNIFORM_API_URL,\r\n        sitecoreApiKey: process.env.UNIFORM_API_KEY,\r\n        jssAppName: process.env.UNIFORM_API_SITENAME,\r\n        sitecoreSiteName: process.env.UNIFORM_API_SITENAME,\r\n    };\r\n}\r\n\r\n/**\r\n * Adds the GraphQL endpoint URL to the config object, and ensures that components needed to calculate it are valid\r\n */\r\nfunction addGraphQLConfig(baseConfig: any) {\r\n    if (baseConfig.graphQLEndpointPath) {\r\n        baseConfig.graphQLEndpoint = `${baseConfig.sitecoreApiHost || ''}${\r\n            baseConfig.graphQLEndpointPath\r\n        }?sc_apikey=${baseConfig.sitecoreApiKey}`;\r\n    } else {\r\n        console.warn(\r\n            'WARN The `graphQLEndpointPath` configuration was not defined. You may need to run `jss setup`.'\r\n        );\r\n        baseConfig.graphQLEndpoint = `${baseConfig.sitecoreApiHost || ''}/api/${\r\n            baseConfig.sitecoreSiteName\r\n        }?sc_apikey=${baseConfig.sitecoreApiKey}`;\r\n    }\r\n}\r\n\r\nfunction mergeConfigs(...configs: any[]) {\r\n    return configs.reduce((result, config) => {\r\n        for (let prop in config) {\r\n            if (config[prop] !== undefined) {\r\n                result[prop] = config[prop];\r\n            }\r\n        }\r\n        return result;\r\n    }, {});\r\n}\r\n"]}