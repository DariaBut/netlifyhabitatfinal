{"version":3,"file":"countFiles.js","sourceRoot":"","sources":["../../src/countFiles.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yBAA6B;AAC7B,6BAAiC;AACjC,IAAM,YAAY,GAAG,gBAAS,CAAC,YAAO,CAAC,CAAC;AAExC,SAAsB,UAAU,CAAC,GAAW,EAAE,SAAiB;;;;wBACpD,qBAAM,eAAe,CAAC,GAAG,EAAE,SAAS,CAAC,iBAAiB,EAAE,CAAC,EAAA;wBAAhE,sBAAO,SAAyD,EAAC;;;;CACpE;AAFD,gCAEC;AAED,SAAe,eAAe,CAAC,GAAW,EAAE,SAAiB;;;;;wBACxC,qBAAM,YAAY,CAAC,GAAG,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,EAAA;;oBAA3D,QAAQ,GAAG,SAAgD;oBAE7D,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAA5D,CAA4D,CAAC,CAAC,MAAM,CAAC;oBAElG,QAAQ,GAAG,QAAQ;yBACpB,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,EAAE,EAAf,CAAe,CAAC;yBAC9B,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,eAAe,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,EAA9C,CAA8C,CAAC,CAAC;oBAE/D,qBAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAA;;oBAA5B,CAAC,SAA2B,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,KAAK,IAAI,CAAC,CAAC,EAAZ,CAAY,CAAC,CAAC;oBAEvD,sBAAO,KAAK,EAAC;;;;CAChB","sourcesContent":["import { readdir } from 'fs';\r\nimport { promisify } from 'util';\r\nconst readdirAsync = promisify(readdir);\r\n\r\nexport async function countFiles(dir: string, extension: string): Promise<number> {\r\n    return await countFilesInner(dir, extension.toLocaleLowerCase());\r\n}\r\n\r\nasync function countFilesInner(dir: string, extension: string): Promise<number> {\r\n    const entities = await readdirAsync(dir, { withFileTypes: true });\r\n\r\n    let count = entities.filter((x) => !x.isDirectory() && x.name.toLowerCase().endsWith(extension)).length;\r\n\r\n    const promises = entities\r\n        .filter((x) => x.isDirectory())\r\n        .map((x) => countFilesInner(dir + '/' + x.name, extension));\r\n\r\n    (await Promise.all(promises)).map((x) => (count += x));\r\n\r\n    return count;\r\n}\r\n"]}