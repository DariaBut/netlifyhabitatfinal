{"version":3,"file":"previewMiddleware.js","sourceRoot":"","sources":["../../../src/middleware/previewMiddleware.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAAgE;AAChE,0DAA+B;AAG/B,SAAgB,uBAAuB,CAAC,MAAW,EAAE,aAAkC,EAAE,MAAc;IACnG,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,oBAAoB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;AACtF,CAAC;AAFD,0DAEC;AAED,SAAgB,oBAAoB,CAAC,aAAkC,EAAE,MAAc;IACnF,OAAO,UAAgB,GAAQ,EAAE,GAAQ;;;;;;wBAC/B,GAAG,GAAG,2BAAkB,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,iBAAiB,CAAC,CAAC;wBAEpG,MAAM,CAAC,KAAK,CAAC,oBAAoB,GAAG,GAAG,CAAC,CAAC;;;;wBAEpB,qBAAM,oBAAK,CAAC,GAAG,CAAC,EAAA;;wBAA3B,QAAQ,GAAG,SAAgB;wBACnB,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA7B,KAAK,GAAG,SAAqB;wBACnC,MAAM,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;wBAE9E,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,WAAW,CAAC,CAAC;wBACnF,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;;wBAEhB,MAAM,CAAC,KAAK,CAAC,2BAA2B,GAAG,GAAG,EAAE,OAAK,CAAC,CAAC;wBACvD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAK,CAAC,CAAC;;;;;;KAEnC,CAAC;AACN,CAAC;AAjBD,oDAiBC","sourcesContent":["import { getApiUrlWithToken, Logger } from '@uniformdev/common';\r\nimport fetch from 'node-fetch';\r\nimport { UniformServerConfig } from '../UniformServerConfig';\r\n\r\nexport function attachPreviewMiddleware(server: any, uniformConfig: UniformServerConfig, logger: Logger) {\r\n    server.get('/uniform/api/content/*', getPreviewMiddleware(uniformConfig, logger));\r\n}\r\n\r\nexport function getPreviewMiddleware(uniformConfig: UniformServerConfig, logger: Logger) {\r\n    return async function (req: any, res: any) {\r\n        const url = getApiUrlWithToken(uniformConfig, decodeURI(req.path), uniformConfig.UNIFORM_API_TOKEN);\r\n\r\n        logger.debug('Proxying request: ' + url);\r\n        try {\r\n            const response = await fetch(url);\r\n            const value = await response.text();\r\n            logger.debug(\"Remote server's response is received, sending it to client...\");\r\n\r\n            res.setHeader('Content-Type', response.headers.get('Content-Type') || 'text/json');\r\n            res.send(value);\r\n        } catch (error) {\r\n            logger.error('Failed to proxy request: ' + url, error);\r\n            res.status(500).send(error);\r\n        }\r\n    };\r\n}\r\n"]}