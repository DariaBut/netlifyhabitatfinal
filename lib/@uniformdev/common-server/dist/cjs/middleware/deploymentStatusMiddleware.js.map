{"version":3,"file":"deploymentStatusMiddleware.js","sourceRoot":"","sources":["../../../src/middleware/deploymentStatusMiddleware.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,4DAA2D;AAE3D,SAAgB,gCAAgC,CAC5C,MAAW,EACX,OAAe,EACf,aAAkC,EAClC,MAAc;IAEd,MAAM,CAAC,GAAG,CACN,wCAAwC,EACxC,6BAA6B,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC,CAChE,CAAC;AACN,CAAC;AAVD,4EAUC;AAED,SAAgB,6BAA6B,CACzC,OAAe,EACf,aAAkC,EAClC,MAAc;IAEd,IAAM,KAAK,GAAG,aAAa,CAAC,iBAAiB,CAAC;IAC9C,OAAO,UAAgB,GAAQ,EAAE,GAAQ;;;;;;wBAC/B,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;wBAEjC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,EAAE;4BACvE,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;4BACpB,MAAM,CAAC,IAAI,CAAC,4DAA0D,MAAQ,CAAC,CAAC;4BAChF,sBAAO;yBACV;wBAEK,SAAS,GAAM,OAAO,SAAI,MAAQ,CAAC;wBAEzB,qBAAM,uCAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,EAAA;;wBAApD,MAAM,GAAG,CAAC,SAA0C,CAAC,IAAI;4BAC3D,MAAM,EAAE,OAAO;4BACf,OAAO,EAAE,iBAAe,MAAM,qGAAkG;4BAChI,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,MAAM,EAAE;yBAC5B;wBAED,MAAM,CAAC,IAAI,CAAC,6CAA2C,MAAM,mBAAc,MAAM,CAAC,OAAS,CAAC,CAAC;wBAE7F,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;;KACpB,CAAC;AACN,CAAC;AA3BD,sEA2BC","sourcesContent":["import { UniformServerConfig } from '../UniformServerConfig';\r\nimport { Logger } from '@uniformdev/common';\r\nimport { BuildDeployService } from '../BuildDeployService';\r\n\r\nexport function attachDeploymentStatusMiddleware(\r\n    server: any,\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    server.get(\r\n        '/uniform/api/deployment/status/:ticket',\r\n        getDeploymentStatusMiddleware(tempDir, uniformConfig, logger)\r\n    );\r\n}\r\n\r\nexport function getDeploymentStatusMiddleware(\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    const token = uniformConfig.UNIFORM_API_TOKEN;\r\n    return async function (req: any, res: any) {\r\n        const ticket = req.params.ticket;\r\n\r\n        if (token && (req.query['uniform_token'] || req.query['token']) !== token) {\r\n            res.sendStatus(401);\r\n            logger.warn(`Unauthorized status request has been rejected, ticket: ${ticket}`);\r\n            return;\r\n        }\r\n\r\n        const outputDir = `${tempDir}/${ticket}`;\r\n\r\n        const status = (await BuildDeployService.status(outputDir)) || {\r\n            status: 'Error',\r\n            message: `There is no ${ticket} job registered, so it either was unexpectedly terminated by Host OS or hasn't been started yet.`,\r\n            time: new Date().toJSON(),\r\n        };\r\n\r\n        logger.info(`Received deploy status request, ticket: ${ticket}, message: ${status.message}`);\r\n\r\n        res.json(status);\r\n    };\r\n}\r\n"]}