{"version":3,"file":"deploymentTriggerMiddleware.js","sourceRoot":"","sources":["../../../src/middleware/deploymentTriggerMiddleware.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\nimport bodyParser from 'body-parser';\r\nimport { Status } from '../Status';\r\nimport { BuildDeployService, BuildAndExportEngine } from '../BuildDeployService';\r\nimport { Logger } from '@uniformdev/common';\r\nimport { UniformServerConfig } from '../UniformServerConfig';\r\nimport { CreatePublishProviderFunc, parseUniformServerConfig } from '..';\r\n\r\nexport function attachDeploymentTriggerMiddleware(\r\n    server: any,\r\n    buildAndExportEngine: BuildAndExportEngine,\r\n    createPublishProvider: CreatePublishProviderFunc,\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    attachTicketDeploymentTriggerMiddleware(\r\n        server,\r\n        buildAndExportEngine,\r\n        createPublishProvider,\r\n        tempDir,\r\n        uniformConfig,\r\n        logger\r\n    );\r\n    attachTicketlessDeploymentTriggerMiddleware(\r\n        server,\r\n        buildAndExportEngine,\r\n        createPublishProvider,\r\n        tempDir,\r\n        uniformConfig,\r\n        logger\r\n    );\r\n}\r\n\r\nexport function attachTicketDeploymentTriggerMiddleware(\r\n    server: any,\r\n    buildAndExportEngine: BuildAndExportEngine,\r\n    createPublishProvider: CreatePublishProviderFunc,\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    const jsonBodyParser = bodyParser.json({ limit: '50mb' });\r\n\r\n    server.post(\r\n        '/uniform/api/deployment/start/:ticket',\r\n        jsonBodyParser,\r\n        getTicketDeploymentTriggerMiddleware(\r\n            buildAndExportEngine,\r\n            createPublishProvider,\r\n            tempDir,\r\n            uniformConfig,\r\n            logger\r\n        )\r\n    );\r\n}\r\n\r\nexport function attachTicketlessDeploymentTriggerMiddleware(\r\n    server: any,\r\n    buildAndExportEngine: BuildAndExportEngine,\r\n    createPublishProvider: CreatePublishProviderFunc,\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    const jsonBodyParser = bodyParser.json({ limit: '50mb' });\r\n\r\n    server.post(\r\n        '/uniform/api/deployment/start',\r\n        jsonBodyParser,\r\n        getTicketlessDeploymentTriggerMiddleware(\r\n            buildAndExportEngine,\r\n            createPublishProvider,\r\n            tempDir,\r\n            uniformConfig,\r\n            logger\r\n        )\r\n    );\r\n}\r\n\r\nexport function getTicketDeploymentTriggerMiddleware(\r\n    buildAndExportEngine: BuildAndExportEngine,\r\n    createPublishProvider: CreatePublishProviderFunc,\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    const token = uniformConfig.UNIFORM_API_TOKEN;\r\n\r\n    return function (req: any, res: any) {\r\n        const ticket = req.params.ticket;\r\n        logger.info('Received deploy request: ' + ticket);\r\n\r\n        const mergedUniformConfig = mergeUniformConfig(uniformConfig, req.body?.env, logger);\r\n\r\n        if (token && (req.query['uniform_token'] || req.query['token']) !== token) {\r\n            res.sendStatus(401);\r\n            logger.warn('Unauthorized request has been rejected');\r\n            return;\r\n        }\r\n\r\n        let outputDir = `${tempDir}/${ticket}`;\r\n\r\n        if (outputDir.length > 2 && outputDir[1] !== ':') {\r\n            outputDir = path.resolve(outputDir);\r\n        }\r\n\r\n        Status.writeStatus(outputDir, { status: 'In progress', message: 'Pending' });\r\n        Status.writeTimer(outputDir);\r\n        const timer = Status.createTimer(outputDir);\r\n\r\n        const publishProvider = createPublishProvider({\r\n            config: mergedUniformConfig,\r\n            logger,\r\n        });\r\n\r\n        // IMPORTANT! NO AWAIT because it is background operation\r\n        BuildDeployService.process(\r\n            tempDir,\r\n            buildAndExportEngine,\r\n            publishProvider,\r\n            outputDir,\r\n            req.body.paths,\r\n            timer,\r\n            mergedUniformConfig,\r\n            logger,\r\n            req.body.timestamp\r\n        );\r\n\r\n        res.json(ticket);\r\n    };\r\n}\r\n\r\nexport function getTicketlessDeploymentTriggerMiddleware(\r\n    buildAndExportEngine: BuildAndExportEngine,\r\n    createPublishProvider: CreatePublishProviderFunc,\r\n    tempDir: string,\r\n    uniformConfig: UniformServerConfig,\r\n    logger: Logger\r\n) {\r\n    const token = uniformConfig.UNIFORM_API_TOKEN;\r\n\r\n    return function (req: any, res: any) {\r\n        logger.info('Received deploy request.');\r\n\r\n        const mergedUniformConfig = mergeUniformConfig(uniformConfig, req.body?.env, logger);\r\n\r\n        if (token && (req.query['uniform_token'] || req.query['token']) !== token) {\r\n            res.sendStatus(401);\r\n            logger.warn('Unauthorized request has been rejected');\r\n            return;\r\n        }\r\n\r\n        // generate next shortest ticket (important to make it short to avoid long-path issues)\r\n        let ticket: string;\r\n        let outputDir: string;\r\n        let last = -1;\r\n        const lastTicketFileName = tempDir + '/last-ticket.txt';\r\n        if (fs.existsSync(lastTicketFileName)) {\r\n            last = parseInt(fs.readFileSync(lastTicketFileName).toString(), 36);\r\n        }\r\n\r\n        for (let ticketDecimal = last + 1; ; ticketDecimal++) {\r\n            ticket = ticketDecimal.toString(36);\r\n            outputDir = tempDir + '/' + ticket;\r\n            if (!fs.existsSync(outputDir)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        fs.writeFileSync(lastTicketFileName, ticket);\r\n\r\n        if (outputDir.length > 2 && outputDir[1] !== ':') {\r\n            outputDir = path.resolve(outputDir);\r\n        }\r\n\r\n        const paths = req.body.paths;\r\n        if (!Array.isArray(paths)) {\r\n            res.status(400).send(\r\n                'The request must have Content-Type: application/json, and the body must contain JSON object with \"paths\" property that holds array of path strings ([\"about\", \"about/company\", ...]) to publish; to publish whole site send empty array'\r\n            );\r\n            return;\r\n        }\r\n\r\n        const timestamp = req.body.timestamp;\r\n        if (!timestamp) {\r\n            res.status(400).send(\r\n                'The request must have Content-Type: application/json, and the body must contain JSON object with \"timestamp\" property with current UTC datetime in ISO format'\r\n            );\r\n            return;\r\n        }\r\n\r\n        Status.writeStatus(outputDir, { status: 'In progress', message: 'Pending' });\r\n        Status.writeTimer(outputDir);\r\n        const timer = Status.createTimer(outputDir);\r\n\r\n        const publishProvider = createPublishProvider({\r\n            config: mergedUniformConfig,\r\n            logger,\r\n        });\r\n\r\n        // IMPORTANT! NO AWAIT because it is background operation\r\n        // TODO: pull ticket file creation from the process method\r\n        BuildDeployService.process(\r\n            tempDir,\r\n            buildAndExportEngine,\r\n            publishProvider,\r\n            outputDir,\r\n            paths,\r\n            timer,\r\n            mergedUniformConfig,\r\n            logger,\r\n            timestamp\r\n        );\r\n\r\n        res.json(ticket);\r\n    };\r\n}\r\n\r\nfunction mergeUniformConfig(\r\n    uniformConfig: UniformServerConfig,\r\n    configDelta: any,\r\n    logger: Logger\r\n): UniformServerConfig {\r\n    if (!configDelta) {\r\n        return uniformConfig;\r\n    }\r\n\r\n    logger.info(\r\n        'Deploy request contains ENV variables: config will be merged for the current deploy request'\r\n    );\r\n\r\n    let delta = { ...configDelta };\r\n    // ensure we do not override API token\r\n    delete delta.UNIFORM_API_TOKEN;\r\n\r\n    logger.info('ENV delta: ' + JSON.stringify(delta));\r\n\r\n    const mergedEnv = { ...uniformConfig.env, ...delta };\r\n    const mergedConfig = parseUniformServerConfig(mergedEnv, logger);\r\n\r\n    return mergedConfig;\r\n}\r\n"]}