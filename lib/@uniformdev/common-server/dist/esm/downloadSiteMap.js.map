{"version":3,"file":"downloadSiteMap.js","sourceRoot":"","sources":["../../src/downloadSiteMap.ts"],"names":[],"mappings":"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","sourcesContent":["import { getApiUrlWithToken, getEnv } from '@uniformdev/common';\r\nimport { Logger } from '@uniformdev/common';\r\nimport { fetchWithRetry } from '@uniformdev/common';\r\nimport { UniformServerConfig } from 'UniformServerConfig';\r\n\r\nimport nodeFetch from 'node-fetch';\r\n\r\nconst readFileAsync = require('util').promisify(require('fs').readFile);\r\nconst existsAsync = require('util').promisify(require('fs').exists);\r\n\r\nconst MAX_ATTEMPTS = 10;\r\nconst DELAY_SECONDS = 2;\r\n\r\nfunction sleep(ms: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport async function downloadSiteMap(config: UniformServerConfig, logger: Logger) {\r\n    let mapServiceEndpoint = config.UNIFORM_API_MAPSERVICE;\r\n    if (!mapServiceEndpoint) {\r\n        mapServiceEndpoint = '/uniform/api/content/${UNIFORM_API_SITENAME}/map';\r\n    }\r\n\r\n    mapServiceEndpoint = mapServiceEndpoint.replace('${UNIFORM_API_SITENAME}', config.UNIFORM_API_SITENAME);\r\n\r\n\r\n    logger.info(`Using '${mapServiceEndpoint}' as map service endpoint`);\r\n\r\n    const suffix = mapServiceEndpoint.toLowerCase();\r\n\r\n    let filename = 'public' + suffix;\r\n    if (await existsAsync(filename)) {\r\n        logger.info('Reading sitemap from local file: ' + filename);\r\n        return JSON.parse((await readFileAsync(filename)).toString());\r\n    }\r\n\r\n    var uniformApiToken = getEnv(process.env, 'UNIFORM_API_TOKEN', undefined);\r\n\r\n    // first and last attempt if MAX_ATTEMPTS <= 1\r\n    try {\r\n        return await doDownloadSiteMap(suffix, getApiUrlWithToken(config, suffix, uniformApiToken ));\r\n    } catch (ex) {\r\n        if (MAX_ATTEMPTS <= 1) {\r\n            throw ex;\r\n        }\r\n    }\r\n\r\n    for (let attempt = 1; true; ++attempt) {\r\n        try {\r\n            logger.warn(\r\n                `Failed to download site map (attempt #${attempt}), it will retry in ${DELAY_SECONDS}s...`\r\n            );\r\n            await sleep(DELAY_SECONDS * 1000);\r\n            const sitemap = await doDownloadSiteMap(suffix, getApiUrlWithToken(config, suffix, uniformApiToken));\r\n\r\n            logger.info(`SUCCESS! Site map has been downloaded`);\r\n\r\n            return sitemap;\r\n        } catch (ex) {\r\n            if (attempt >= MAX_ATTEMPTS) {\r\n                throw ex;\r\n            }\r\n        }\r\n    }\r\n\r\n    async function doDownloadSiteMap(suffix: string, apiUrl: string) {\r\n        const response = await fetchWithRetry(\r\n            <any>nodeFetch,\r\n            logger,\r\n            apiUrl,\r\n            3,\r\n            parseInt(getEnv(config.env, 'UNIFORM_PUBLISH_MAP_REQUEST_TIMEOUT', '90000'))\r\n        );\r\n        const value = await response.json();\r\n\r\n        if (!value.id || !value.template) {\r\n            throw new Error(\r\n                'The API call returned unexpected data. url: ' +\r\n                    suffix +\r\n                    ', props: ' +\r\n                    Object.getOwnPropertyNames(value)\r\n            );\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n"]}